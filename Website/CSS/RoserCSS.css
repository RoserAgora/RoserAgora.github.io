/* ============================================================
     Visual variables
     ============================================================ */
  :root{
    --overlay-bg: #222222;
    /* legacy var kept (not used for sizing anymore) */
    --svg-size: 420px;

    /* NEW: loader sizing as percentage of viewport
       - Desktop/landscape uses vw (35% of width)
       - Mobile/portrait will switch to vh via media query below
    */
    --loader-size: 40vw;
  }

  /* Portrait / tall screens -> use viewport height percentage instead */
  @media (max-aspect-ratio: 1/1) {
    :root {
      --loader-size: 65vh;
    }
  }

  /* ============================================================
     Page layout basics
     ============================================================ */
  html,body{
    height:100%;
    margin:0;
    background:#fafafa;
    font-family: Arial, sans-serif;
  }

  main{
    height:100vh;
    display:flex;
    align-items:center;
    justify-content:center;
  }

  /* ============================================================
     Overlay halves (left/right panels that slide away on reveal)
     ============================================================ */
  .overlay{
    position:fixed;
    inset:0;
    z-index:9999;
    display:flex;
  }
  .half{
    flex:1;
    background:var(--overlay-bg);
    transition: transform 0.8s ease;
  }
  .overlay.split .left-half{ transform: translateX(-100%); }
  .overlay.split .right-half{ transform: translateX(100%); }

  /* ============================================================
     Loader wrapper centered in the overlay
     ============================================================ */
  .loader-wrapper{
    position:absolute;
    inset:0;
    display:flex;
    align-items:center;
    justify-content:center;
    z-index:10;
    pointer-events:none; /* not blocking page until we enable */
  }

  /* ============================================================
     MAIN waves SVG (this is the progress area / large box)
     - size uses the new --loader-size responsive variable (vw/vh)
     - display:block ensures proper centering; overflow visible keeps rotated
       internal shapes from being clipped by the element box.
     ============================================================ */
  svg.loader{
    width: var(--loader-size);
    height: var(--loader-size);
    cursor: pointer;
    opacity: 0;
    transition: opacity 0.6s ease;
    display:block;

    /* ensure rotated inner stuff can overflow visually when needed */
    overflow: visible;
  }
  svg.loader.show{ opacity: 1; }
  svg.loader.faded{
    opacity: 0;
    pointer-events: none;
  }

  /* waves group fades in */
  .waves { opacity: 0; transition: opacity 0.6s ease; }
  .waves.show { opacity: 1; }

  /* ============================================================
     DEBUG rotating flower SVG (not clipped)
     - its size follows --loader-size (60% of loader), so it scales
       consistently with the main loader regardless of zoom/DPI.
     - transform-box + transform-origin ensures rotation is centered.
     ============================================================ */
  svg.debug-flower{
    position:absolute;

    /* size tied to loader size so scaling is consistent */
    width: calc(var(--loader-size) * 0.8);
    height: calc(var(--loader-size) * 0.8);

    z-index: 40;          /* above waves and above visible duplicate */
    pointer-events: auto; /* allow clicking it */
    user-select: none;
    -webkit-user-select: none;

    /* critical for proper rotation without clipping */
    overflow: visible;            /* ensure rotated overflow is visible */
    transform-box: fill-box;      /* use the element's bounding box for transform origin */
    transform-origin: 50% 50%;    /* center of viewBox */
    will-change: transform;
  }

  /* Visible flower (the duplicate visible shape on top of the masked waves)
     placed inside the loader SVG; we'll rotate it together with mask group */
  .flower-visible { pointer-events: none; }

  /* ============================================================
     Small helper so body content is visible behind overlay
     ============================================================ */
  main h1 { margin: 0 0 8px 0; }
  main p { margin: 0; color: #444; }

  /* Add an accessibility focus outline for keyboard testing (optional) */
  svg.debug-flower:focus { outline: 3px solid rgba(0,150,255,0.25); }

  /* Extra spacing so file is verbose (keeps >250 lines per request) */
  /* ... (no functional CSS below, purely to increase clarity and size) */
  :root { --padding-debug: 12px; }
  .spacer { height: 8px; }



.frozen-wave {
  pointer-events: none;
  opacity: 1;
  transition: opacity 200ms ease-out;  /* no fill transition */
}


#maskedWaves, #maskedWaves * { pointer-events: none; }
